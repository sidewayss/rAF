{
  "titles": {
    "plays":      "Number of times to play the animation",
    "loopWait":   "Time to wait between each play and each loop by element",
    "roundTrip":  "Toggles one-way vs two-way trip, has sub-options",
    "flipTrip":   "Flip to mirror image for return trip, default is true, has no effect on one-legged linear",
    "autoTrip":   "Automatic return trip, aka autoTrip, default is true",
    "tripWait":   "Time to wait before commencing return trip",
    "initZero":   "Apply values in the 0th frame, here it only matters for steps w/jump == E.start or E.both, otherwise it matters when current value != initial value",
    "reset":      "Automatically reset after each play, e.g. {onArrival:E.initial}",
    "save":       "Save current settings as a named Easy",
    "revert":     "Revert to saved, discard changes",
    "preset":     "Revert to original preset, discarding all previous changes",
    "delete":     "Delete selected named Easy",
    "data":       "Copy animation data as a tab-delimited table, for pasting into a spreadsheet or other table editor",
    "code":       "Copy object(s) as plain text JavaScript code",
    "time":       "Sets the duration of a single play",
    "swap":       "Swap start & end",
    "type":       "The primary shaper of the timing curve(s)",
    "type2":      "Ease for the second leg",
    "io":         "IO: the permutations of in and out, here it determines if the animation has one or two legs",
    "pow":        "Power aka exponent",
    "pow2":       "Power for second leg",
    "linkType":   "Link type across two legs",
    "linkPow":    "Link power (exponent) across two legs",
    "bezier0":    "x1",
    "bezier1":    "y1",
    "bezier2":    "x2",
    "bezier3":    "y2",
    "steps":      "The number of steps for the steps function",
    "jump":       "The steps function jump parameter",
    "values":     "The type of values",
    "timing":     "The type of timing",
    "easeValues": "The easing for values",
    "easeTiming": "The easing for timing",
    "v0":         "",
    "v1":         "",
    "v2":         "",
    "t0":         "",
    "t1":         "",
    "t2":         "",
    "clearMid":   "Clear mid",
    "clearSplit": "Clear split",
    "clearGap":   "Clear gap",
    "lockSplit":  "Lock split: maintain or scale value when Duration changes",
    "lockGap":    "Lock gap: maintain or scale value when Duration changes",
    "trip0":      "Auto-trip by Easy. Unchecked prevents autoTrip, but does not enable a return trip. Too funky to be worth it at this time.",
    "trip1":      "Auto-trip by Easy. Unchecked prevents autoTrip, but does not enable a return trip. Too funky to be worth it at this time.",
    "trip2":      "Auto-trip by Easy. Unchecked prevents autoTrip, but does not enable a return trip. Too funky to be worth it at this time.",
    "color0":     "Color of top-left corner of gradient",
    "color1":     "Color of bottom-right corner of gradient",
    "compare":    "Toggle between 1 and 2 colors",
    "leftSpaces": "Select a color space",
    "rightSpaces":"Select a color space",
    "lblDisplay": "CSS function or color space, if different from the selected space id",
    "lblStart":   "Start value",
    "lblValue":   "Current value",
    "lblEnd":     "End value",
    "roundT":     "Toggle round-trip",
    "share":      "Copy link to clipboard, including all current settings",
    "collapse":   "Show/hide control panel",
    "fullBody":   "Toggle canvas size to|from <div>|<body>"
  },
  "presets": {
    "Easy-": {
      "": {
        "time": 2000,
        "end": 1000
      },
      "sineIn": {
        "time": 2000,
        "type": 1,
        "end": 1000
      },
      "sineOut": {
        "time": 2000,
        "type": 1,
        "io": 1,
        "end": 1000
      },
      "circInOut": {
        "time": 2000,
        "type": 2,
        "io": 4,
        "end": 1000
      },
      "circOutIn": {
        "time": 2000,
        "type": 2,
        "io": 3,
        "end": 1000
      },
      "elCircoInIn": {
        "end": 1000,
        "legs": [
          {
            "time": 1000,
            "type": 5,
            "end": 500
          },
          {
            "time": 1000,
            "type": 2
          }
        ]
      },
      "bouncExpOOut": {
        "end": 1000,
        "legs": [
          {
            "time": 1000,
            "type": 6,
            "io": 1,
            "end": 500
          },
          {
            "time": 1000,
            "type": 3,
            "io": 1
          }
        ]
      },
      "pow_0.5": {
        "time": 2000,
        "type": 7,
        "end": 1000,
        "pow":0.5
      },
      "pow_2.5": {
        "time": 2000,
        "type": 7,
        "end": 1000,
        "pow":2.5
      },
      "pow_2.5o/5i": {
        "end": 1000,
        "legs": [{
            "time": 1500,
            "type": 7,
            "io": 1,
            "end": 585,
            "pow": 2.5
          }, {
            "time": 500,
            "type": 7,
            "pow": 5
          }]
      },
      "sine + pow": {
        "end": 1000,
        "legs": [{
            "time": 1000,
            "type": 1,
            "end": 500
          }, {
            "time": 1000,
            "type": 7,
            "io": 1,
            "pow": 3.3
          }]
      },
      "bezierA": {
        "time": 2000,
        "type": 8,
        "end": 1000,
        "bezier": [0.57, 0, 0.18, 1]
      },
      "bezierB": {
        "time": 2000,
        "type": 8,
        "end": 1000,
        "bezier": [0.75, -0.5, 0.25, 1.33]
      },
      "bezierC": {
        "time": 2000,
        "type": 8,
        "end": 1000,
        "bezier": [0, 0.75, 0.9, 0.5]
      },
      "bezierD": {
        "time": 2000,
        "type": 8,
        "end": 1000,
        "bezier": [0.5, -0.75, 0.25, 1.25],
        "roundTrip": true,
        "flipTrip": false
      },
      "steps_15": {
        "time": 2000,
        "type": 9,
        "end": 1000,
        "steps": 15,
        "jump": 2
      },
      "steps_easeT": {
        "time": 2000,
        "type": 9,
        "end": 1000,
        "steps": 15,
        "jump": 3,
        "timing": "sineOut"
      },
      "steps_easeV": {
        "time": 2000,
        "type": 9,
        "end": 1000,
        "steps": 15,
        "easy": "sineOut"
      },
      "steps_easeTV": {
        "time": 2000,
        "type": 9,
        "end": 1000,
        "steps": 15,
        "timing": "sineOut",
        "easy": "sineOut"
      },
      "steps_outIn":{
        "time": 3125,
        "type": 9,
        "end": 1000,
        "steps": 30,
        "jump": 3,
        "timing": "pow_2.5o/5i"
      },
      "steps_oIline":{
        "time": 3125,
        "type": 9,
        "end": 1000,
        "steps": 30,
        "timing": "pow_2.5o/5i",
        "easy": ""
      },
      "steps_oIbezB":{
        "time": 3125,
        "type": 9,
        "end": 1000,
        "steps": 30,
        "timing": "pow_2.5o/5i",
        "easy": "bezierB"
      },
      "mid": {
        "time": 2000,
        "io": 4,
        "end": 1000,
        "mid": 667
      },
      "split": {
        "time": 2000,
        "io": 4,
        "end": 1000,
        "split": 667
      },
      "gap": {
        "time": 2000,
        "io": 4,
        "end": 1000,
        "gap": 250
      },
      "msg350": {
        "time": 2000,
        "io": 4,
        "end": 1000,
        "mid": 350,
        "split": 1350,
        "gap": 350
      },
      "autoTrip": {
        "time": 2500,
        "type": 2,
        "end": 1000,
        "roundTrip":true
      },
      "manualTrip": {
        "time": 2500,
        "type": 2,
        "end": 1000,
        "roundTrip": true,
        "autoTrip": false
      },
      "tripNoFlip": {
        "time": 2500,
        "type": 2,
        "end": 1000,
        "roundTrip": true,
        "flipTrip": false
      }
    },
    "MEaser-": {
      "": {"easy": ["","sineIn","sineOut"]},
      "bezierABC": {"easy": ["bezierA","bezierB","bezierC"] },
      "sineSteps": {"easy": ["sineOut","steps_15",""]},
      "sineStepsEz": {"easy": ["sineOut","steps_15","steps_easeT"]},
      "allSteps":   {"easy": ["steps_15","steps_outIn","steps_oIline"]},
      "allStepsEz": {"easy": ["steps_easeT","steps_easeV","steps_oIbezB"]},
      "antiTrip": {
        "easy": ["autoTrip","manualTrip",""],
        "trip": [false, true, null]
      }
    }
  }
}